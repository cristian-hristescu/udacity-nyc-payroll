{
	"name": "Dataflow Summary",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "db_nyc_payroll_2020",
						"type": "DatasetReference"
					},
					"name": "srcnycpayroll2020"
				},
				{
					"dataset": {
						"referenceName": "db_nycpayroll_2021",
						"type": "DatasetReference"
					},
					"name": "srcpayroll2021"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "syn_payroll_aggr",
						"type": "DatasetReference"
					},
					"name": "destSummary"
				},
				{
					"dataset": {
						"referenceName": "db_payroll_summary",
						"type": "DatasetReference"
					},
					"name": "destDBSummary",
					"description": "Export data to DB Summary"
				}
			],
			"transformations": [
				{
					"name": "union"
				},
				{
					"name": "filteryear"
				},
				{
					"name": "createTotalPaid"
				},
				{
					"name": "aggrTotalPaid"
				}
			],
			"scriptLines": [
				"parameters{",
				"     dataflow_param_fiscalyear as integer (2020)",
				"}",
				"source(output(",
				"          FiscalYear as integer,",
				"          PayrollNumber as integer,",
				"          AgencyID as string,",
				"          AgencyName as string,",
				"          EmployeeID as string,",
				"          LastName as string,",
				"          FirstName as string,",
				"          AgencyStartDate as date,",
				"          WorkLocationBorough as string,",
				"          TitleCode as string,",
				"          TitleDescription as string,",
				"          LeaveStatusasofJune30 as string,",
				"          BaseSalary as double,",
				"          PayBasis as string,",
				"          RegularHours as double,",
				"          RegularGrossPaid as double,",
				"          OTHours as double,",
				"          TotalOTPaid as double,",
				"          TotalOtherPay as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> srcnycpayroll2020",
				"source(output(",
				"          FiscalYear as integer,",
				"          PayrollNumber as integer,",
				"          AgencyCode as string,",
				"          AgencyName as string,",
				"          EmployeeID as string,",
				"          LastName as string,",
				"          FirstName as string,",
				"          AgencyStartDate as date,",
				"          WorkLocationBorough as string,",
				"          TitleCode as string,",
				"          TitleDescription as string,",
				"          LeaveStatusasofJune30 as string,",
				"          BaseSalary as double,",
				"          PayBasis as string,",
				"          RegularHours as double,",
				"          RegularGrossPaid as double,",
				"          OTHours as double,",
				"          TotalOTPaid as double,",
				"          TotalOtherPay as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> srcpayroll2021",
				"srcnycpayroll2020, srcpayroll2021 union(byName: true)~> union",
				"union filter(toInteger(FiscalYear) >= $dataflow_param_fiscalyear) ~> filteryear",
				"filteryear derive(TotalPaid = RegularGrossPaid + TotalOTPaid + TotalOtherPay) ~> createTotalPaid",
				"createTotalPaid aggregate(groupBy(AgencyName,",
				"          FiscalYear),",
				"     TotalPaid = sum(TotalPaid)) ~> aggrTotalPaid",
				"aggrTotalPaid sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> destSummary",
				"aggrTotalPaid sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> destDBSummary"
			]
		}
	}
}